#ifndef _LOADABLEDEVICE_IDL
#define _LOADABLEDEVICE_IDL

#include "Device.idl"
#include "FileSystem.idl"

module CF {
	/* This interface extends the Device interface by adding software loading
	and unloading behavior to a Device. */
	
	interface LoadableDevice : Device {
		/* This LoadType defines the type of load to be performed.  The load types are in accordance with 
		the code element withing the softpkg element's implementation element, which is defined in Appendix D SPD */
		
		enum LoadType {
			KERNEL_MODULE,
			DRIVER,
			SHARED_LIBRARY,
			EXECUTABLE
		};
		
		/* The InvalidLoadKind exception indicates that the Device is unable to load the type of file 
		designated by the loadKind parameter. */
		
		exception InvalidLoadKind {
		};
		
		/* The LoadFail exception indicates that the Load operation failed due to device dependent reasons. 
		The LoadFail exception indicates that an error occurred during an attempt to load the device. The 
		error number indicates an ErrorNumberType value (e.g. EACCES, EAGAIN, EBADF, EINVAL, EMFILE, 
		ENAMETOOLONG, ENOENT, ENOMEM, ENOSPC, ENOTDIR ). The message is component-dependent, providing 
		additional information describing the reason for the error. */
		
		exception LoadFail {
			ErrorNumberType errorNumber;
			string msg;
		};
		
		/* This operation provides the mechanism for loading software on a specific device.  The loaded 
		software may be subsequently executed on the Device, if the Device is an 
		ExecutableDevice.

		The load operation loads a file on the specified device based upon the input loadKind and fileName 
		parameters using the input FileSystem parameter to retrieve the file.  

		The load operation supports the load types as stated in the Device's software profile LoadType 
		allocation properties.

		The load operation keeps track of the number of times a file has been successfully loaded.

		This operation does not return any value.

		The load operation raises the InvalidState exception when the Device's 
		adminState is not UNLOCKED or operationalState is DISABLED.

		The load operation raises the InvalidLoadKind exception when the input loadKind parameter is not supported. 

		The load operation raises the CF InvalidFileName exception when the file 
		designated by the input filename parameter cannot be found.

		The load operation raises the LoadFail exception when an attempt to load the device is unsuccessful.
		@roseuid 3A5DAED301AE */
		void load (
			in FileSystem fs,
			in string fileName,
			in LoadType loadKind
			)			
			raises (InvalidState, InvalidLoadKind, InvalidFileName, LoadFail );
			
		/* This operation provides the mechanism to unload software that is currently loaded.

		The unload operation decrements the load count for the input filename parameter by one. 
		The unload operation unloads the application software on the device based on 
		the input fileName parameter, when the file's load count equals zero.

		This operation does not return a value.

		The unload operation raises the InvalidState exception when the Device's adminState is 
		LOCKED or its operationalState is DISABLED.

		The unload operation raises the CF InvalidFileName exception when the file designated by the 
		input filename parameter cannot be found.
		@roseuid 3A5DAED301B2 */
		void unload (
			in string fileName
			)			
			raises (InvalidState, InvalidFileName);
			
	};
};

#pragma version CF::LoadableDevice 1.0

#endif //LOADABLEDEVICE_IDL
