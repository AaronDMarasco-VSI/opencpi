/****************************************************************************

Copyright 2007 Virginia Polytechnic Institute and State University

This file is part of the OSSIE Standard Interfaces.

OSSIE Standard Interfaces are free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

OSSIE Standard Interfaces is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with OSSIE Standard Interfaces; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


****************************************************************************/


#include "ossie/PortTypes.idl"

module standardInterfacesMD {

    /// Modulation scheme
    struct ModulationScheme {
        enum mod_scheme {
            UNKNOWN,        ///< Unknown modulation scheme
            PSK,            ///< Phase shift keying
            DPSK,           ///< Differential PSK
            PAM,            ///< Pulse amplitude modulation
            FSK,            ///< Frequency shift keying
            QAM             ///< Quadrature amplitude modulation
            } scheme;
        unsigned long   M;  ///< Number of symbols in constellation
    };

    /// \brief Meta data for packets
    struct MetaData {

        /// Modulation scheme used for this packet
        ModulationScheme modulation_scheme;

        unsigned long packet_id;    ///< Generic packet id number
        float sampling_frequency;   ///< Sampling frequency (Hz)
        float carrier_frequency;    ///< Carrier frequency (Hz)
        float signal_bandwidth;     ///< Real-time signal bandwidth (Hz)
        float signal_strength;      ///< Signal strength (dB)
        boolean eom;                ///< End-of-message flag/marker

        unsigned long src_id;       ///< Source identifier
        unsigned long dst_id;       ///< Destination identifier
        unsigned long app_id;       ///< Application identifier
        unsigned long port_id;      ///< Port identifier

        unsigned long packet_type;  ///< Type of packet to use
    };

    /// \brief RadioMetaData interface
    ///
    /// Because interfaces such as complexShort already push meta data with each
    /// packet, adding this interface to a components for describing its data is
    /// not necessary.  This interface is intended for debugging, configuring
    /// properties, and sending control information about received packets.
    interface RadioMetaData {
        oneway void pushMetaData(in MetaData packet_data);
    };

};

