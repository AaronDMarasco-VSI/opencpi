# Copyright (c) 2009 Mercury Federal Systems.
# 
# This file is part of OpenCPI.
# 
# OpenCPI is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# OpenCPI is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with OpenCPI.  If not, see <http://www.gnu.org/licenses/>.

all: objects

include $(CPIDIR)/MakeVars.cpi
ifneq ($(OUTDIR),)
OBJDIR = ../../$(OUTDIR)
else
OBJDIR = .
endif
include $(CPIDIR)/Makefile.cpi.common

ifneq ($(wildcard ../../Makefile.cpi.imports),)
include ../../Makefile.cpi.imports
endif

CFLAGS += $(EXTRA_CFLAGS)
CXXFLAGS += $(EXTRA_CXXFLAGS)
ALLDEFS += $(EXTRA_DEFS)
ALLINC += $(wildcard ../../*/include) $(wildcard ../../*/idl) $(EXTRA_INCLUDES)

ifeq ($(BUILDSHAREDLIBRARIES),1)
ifneq ($(filter linux darwin,$(SYSTEM)),)
CFLAGS += -fPIC
CXXFLAGS += -fPIC
endif
endif

#
# C/C++ files
#

CSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.c))
CXXSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.cxx))
CPPSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.cpp))
ASMSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.asm))
COBJECTS = $(patsubst %.c,$(OBJDIR)/%.obj,$(CSOURCES))
CXXOBJECTS = $(patsubst %.cxx,$(OBJDIR)/%.obj,$(CXXSOURCES))
CPPOBJECTS = $(patsubst %.cpp,$(OBJDIR)/%.obj,$(CPPSOURCES))
ASMOBJECTS = $(patsubst %.asm,$(OBJDIR)/%.obj,$(ASMSOURCES))
OBJECTS = $(COBJECTS) $(CXXOBJECTS) $(CPPOBJECTS) $(ASMOBJECTS) 
CDEPENDS = $(patsubst %.c,%.d,$(CSOURCES))
CXXDEPENDS = $(patsubst %.cxx,%.d,$(CXXSOURCES))
CPPDEPENDS = $(patsubst %.cpp,%.d,$(CPPSOURCES))

#
# Rules
#

.PHONY: objdir objects depends generated clean distclean cleanup distcleanup

objdir:
	if test "x$(OUTDIR)" != "x" ; then mkdir -p $(OBJDIR) ; fi

depends: $(CDEPENDS) $(CXXDEPENDS) $(CPPDEPENDS)
generated: depends
objects: generated objdir $(OBJECTS)
clean: cleanup
	-rm -f $(OBJECTS)
distclean: distcleanup
	-rm -f $(OBJECTS)

#
# Direct dependencies for C/C++ files
#

$(COBJECTS): $(OBJDIR)/%.obj: %.c
$(CXXOBJECTS): $(OBJDIR)/%.obj: %.cxx
$(CPPOBJECTS): $(OBJDIR)/%.obj: %.cpp
$(ASMOBJECTS): $(OBJDIR)/%.obj: %.asm
$(CDEPENDS): %.d: %.c
$(CXXDEPENDS): %.d: %.cxx 
$(CPPDEPENDS): %.d: %.cpp

#
# Include generated dependency files
#

ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
ifneq ($(wildcard *.d),)
include *.d
endif
endif
