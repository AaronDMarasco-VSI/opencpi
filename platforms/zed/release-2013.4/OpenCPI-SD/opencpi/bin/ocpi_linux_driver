#!/bin/sh

# This script loads and unloads the linux driver
# it is intended to be called from another script that checks args etc.

# Retrieve the reserved DMA memory value from the kernel command line
# Note there might be multiple reservations, and we currently only support one (the first).

source $OCPI_CDK_DIR/scripts/ocpisetup.sh $OCPI_CDK_DIR/scripts/ocpisetup.sh
MODNAME=opencpi
SUDO=sudo
MODFILE=$MODNAME.ko
RULESFILE=99-$MODNAME.rules
if [ -x /sbin/udevcontrol ] ; then
RELOAD="/sbin/udevcontrol reload_rules"
elif [ -x /sbin/udevadm ] ; then
RELOAD="/sbin/udevadm control --reload-rules"
elif [ -x /sbin/mdev ] ; then
RELOAD=
SUDO=
RULESFILE=mdev-$MODNAME.rules
else
 echo Error: None of /sbin/udevcontrol, /sbin/udevadm, or /sbin/mdev were found and executable.
 exit 1
fi
# Don't run sudo if already root
if [ $(id -u) = 0 ]; then
  SUDO=
fi
if [ $# = 2 ] ; then # this is for the makefile
  DIR=.
else
  # if we are in a bin directory, we are in a standalone/embedded mode
  DIR=`dirname $0`
  DNAME=`basename $DIR`
  if [ "$DNAME" = bin ] ; then
    DIR="$DIR/../lib"
  else
    DIR=$OCPI_CDK_DIR/lib/$OCPI_TOOL_HOST
    if test ! -e $DIR/$MODFILE; then
      REL=`uname -r | sed 's/-dirty//'`
      DIR2=$OCPI_CDK_DIR/driver/$REL/target-$OCPI_TOOL_HOST
      if test ! -e $DIR2/$MODFILE; then
        echo Error: cannot find driver/file $MODFILE in $DIR or $DIR2
        exit 1
      fi
      DIR=$DIR2
    fi
  fi
fi
MODPATH=$DIR/$MODFILE
RULESPATH=$DIR/$RULESFILE

rudev () {
  if [ "$RELOAD" = '' ] ; then
    sed '/ocpi=/d' < /etc/mdev.conf > /tmp/dmdev.conf
    mv /tmp/dmdev.conf /etc/mdev.conf
  else
    $SUDO rm -f /etc/udev/rules.d/$RULESFILE
    $SUDO $RELOAD
  fi
}

rmd () {
  $SUDO /sbin/rmmod $MODNAME
  if [ $? = 1 ] ; then
    echo Unexpected error unloading driver module.
    exit 1
  fi
  # check /dev?
  sleep 1 # in case udev's processing of the unload takes some time?
  rudev
}


if [ -d /sys/module/opencpi ] ; then
   case $1 in
     (reload) 
       echo The driver module is already loaded.  It will be unloaded.
       rmd
       ;;
     (load)
       echo The driver module is already loaded.  No action was taken.
       exit 0
       ;;
     (unload)
       rmd
       echo The driver module was successfully unloaded.
       exit 0
       ;;
     (status)
       echo The driver module is currently loaded.
       exit 0
       ;;
  esac
elif [ $1 = unload ] ; then
    echo The driver module is not loaded.  No action was taken.
    exit 0
fi
MEMMAP=`tr ' ' '\n' < /proc/cmdline | grep -m 1 '^memmap='`
if [ "$MEMMAP" = "" ] ; then
  echo No reserved DMA memory found on the linux boot command line.
  INSARG=
else
  echo Found reserved DMA memory on the linux boot command line: =$MEMMAP=.
  INSARG=opencpi_$MEMMAP
fi
if [ ! -r $MODPATH ] ; then
  echo The driver file: \"$MODPATH\" is missing or was never built.
  if [ $1 != status ] ; then
     exit 1
  fi
elif [ $1 = status ] ; then
  read d0 d1 d2 d3 d4 d5<<EOF
`ls -lL $MODPATH`
EOF
  echo The driver file is dated: $d5
fi
if [ $1 = status ] ; then
  echo The driver module is not currently loaded.
  exit 0
fi
if [ "$RELOAD" = '' ] ; then
  if grep -s ocpi= /etc/mdev.conf; then
    echo The mdev config already has OpenCPI rules.
  else
    echo The mdev config has no OpenCPI rules.  We will add them to /etc/mdev.conf
    cat $RULESPATH >> /etc/mdev.conf
  fi
else
  $SUDO cp $RULESPATH /etc/udev/rules.d &&
  $SUDO $RELOAD
  if test $? != 0; then
    exit 1
  fi
fi
$SUDO /sbin/insmod $MODPATH $INSARG
RES=$?
#sudo /sbin/modprobe -v 
if [ $RES = 0 ] ; then
  # check /dev?
  echo Driver loaded successfully.
  exit 0
else
  rudev
  echo Driver loading failed.
  exit $RES
fi
